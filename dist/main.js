import P from'fastify';import R from'@fastify/swagger';import b from'@fastify/swagger-ui';import i,{z}from'zod';import {v4}from'uuid';import {validatorCompiler,serializerCompiler,jsonSchemaTransform}from'fastify-type-provider-zod';var y=i.array(i.object({shortDescription:i.string(),price:i.string()})),m=i.object({retailer:i.string({description:"The name of the retailer or store the receipt is from."}),purchaseDate:i.string().date(),purchaseTime:i.string(),items:y,total:i.string()});var l=t=>t.replace(/[^a-zA-Z0-9]/g,"").length,f=t=>{let r=t.split(".")[1],e=r==="00"?50:0;return Number(r)%25===0&&(e+=25),e},d=t=>{let r=Math.floor(t.length/2)*5;return t.reduce((c,s)=>(s.shortDescription.trim().length%3===0&&(c+=Math.ceil(Number(s.price)*.2)),c),r)},u=(t,r)=>{let e=0,c=Number(t.split("-")[2]),s=Number(r.split(":")[0]);return c%2!==0&&(e+=6),s>=14&&s<16&&(e+=10),e};var o=P();o.setValidatorCompiler(validatorCompiler);o.setSerializerCompiler(serializerCompiler);o.register(R,{openapi:{info:{title:"Receipt Processor",description:"A simple receipt processor for fetch",version:"1.0.0"},servers:[]},transform:jsonSchemaTransform});o.register(b,{routePrefix:"/documentation"});var h=new Map;o.after(()=>{o.withTypeProvider().post("/receipts/process",{schema:{body:m,response:{200:z.object({id:z.string().uuid()})}}},(t,r)=>{let e=v4();h.set(e,t.body),r.send({id:e});}),o.withTypeProvider().get("/receipts/:id/points",{schema:{params:z.object({id:z.string().uuid()}),response:{200:z.object({points:z.number()}),404:z.string({description:"No receipt found for that id"})}}},(t,r)=>{let e=h.get(t.params.id);if(!e)throw r.code(404).send(`No receipt found for that id ${t.params.id}`),new Error(`No receipt found for that id ${t.params.id}`);let c=l(e.retailer),s=f(e.total),p=d(e.items),g=u(e.purchaseDate,e.purchaseTime);return {points:c+s+p+g}});});var n=o;async function x(){await n.ready(),await n.listen({port:3e3}),console.log("Documentation running at http://localhost:3000/documentation");}x();